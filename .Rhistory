D <- data.frame(x=x, y=y)
fitted <- lm(y ~ x, data=D)
summary(fitted)
-5.31+c(-1,1)*qt(0.975, 7)*0.2558
?conf
?predict
conf <- predict(fitted, newdata=data.frame(x=80), interval="confidence")
conf <- predict(fitted, newdata=data.frame(x=80), interval="confidence")
conf <- predict(fitted, newdata=data.frame(x=80), interval="conf")
conf <- predict(fitted, newdata=data.frame(x=80), interval="confidence")
conf <- predict(fitted, newdata=data.frame(x=80), interval="confidence", level=0.95)
x = c(0, 25, 50, 75, 100)
y = c(14, 38, 54, 76, 95)
D <- data.frame(x=x, y=y)
fitted <- lm(y ~ x, data=D)
summary(fitted)
conf <- predict(fitted, newdata=data.frame(x=80), interval="confidence", level=0.95)
predict(fit, newdata=data.frame(x=80), interval="confidence",
level=0.95)
predict(fitted, newdata=data.frame(x=80), interval="confidence",
level=0.95)
qt(0.75, 5)
qt(5, 0.75)
x = c(15, 25, 35, 40)
y = c(42.1, 36, 31.8, 28.7)
D <- data.frame(x=x, y=y)
fitted <- lm(y ~ x, data=D)
summary(fitted)
predict(fitted, newdata=data.frame(x=80), interval="confidence", level=0.95)
predict(fitted, D, interval="confidence", level=0.95)
predict(fitted, interval="confidence", level=0.95)
-0.5214+c(-1,1)*qt(0.975, 2)
c(-1,1)*qt(0.975, 2)
-0.5214+c(-1,1)*qt(0.975, 2)*0.02898
D <- data.frame(concentration=c(11.5, 10.2, 10.3, 9.68, 9.32), distance=c(2, 4, 6, 8, 10))
fit <- lm(concentration ~ distance, data=D)
summary(fit)
predict(fit, newdata=data.frame(distance=7), interval="confidence",level=0.95)
D          <-          data.frame(pressure=c(1.02,2.08,2.89,4.01,5.32,5.83,7.26,7.96,9.11,9.99),flux=c(1.15,0.85,1.56,1.72,4.32,5.07,5.00,5.31,6.17,7.04))
fit <- lm(flux ~ pressure, data=D)
summary(fit)
correlation <- sqrt(0.9289)
correlation
mean(pressure)
mean(flux)
mean(c(1.02,2.08,2.89,4.01,5.32,5.83,7.26,7.96,9.11,9.99))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
pt(0.975, df = 237)
pt(0.05, df = 237)
?pt
pt(1-0.05, df = 237)
pt(1-0.05, df = 237)
pt(1-0.05, df = 237)
pt(0.975, df = 237)
qt(0.975, df = 237)
-2.365*c(-1,1)+1.97*0.222
-2.365+1.97*0.222
-2.365-1.97*0.222
-2.365+1.97*c(-1,1)*0.222
0.467+1.97*c(-1,1)*0.062
0.083+1.97*c(-1,1)*0.070
qchisq(df = 2)
dchisq(df=2)
qchisq(1, df=2)
qchisq(0.95, 2)
qchisq(0.9995)
qchisq(0.9995, 1)
qchisq(0.9995, 2)
qchisq(0.9995, 2)
prop.test()
prop.test(x = 168, n = 740, conf.level = 0.9995)
qnorm(0.9995)
qnorm(0.975)
qnorm(0.025)
library("smartstats")
# Exercise 1.1
x <- c(2474, 2547, 2830, 3219, 3429, 3448, 3677, 3872, 4001, 4116)
y <- c(2844, 2863, 2963, 3239, 3379, 3449, 3582, 3926, 4151, 4356)
# a)
mean(x)
var(x)
sd(x)
# b)
mean(y)
var(y)
sd(y)
# c)
quantile(x, type=2)
data <- data.frame(Females = x, Males = y)
boxplot(data)
# e)
cv(x, 3)
??cv
# e)
cv(x, 3)
# e)
cv(x)
cv(y)
# e)
cv(x, 1)
cv(y, 1)
# a)
(251+1)/2
34+28+43+42
34+28+43
34+28+43+42
# a)
(251+1)/2
34+28+43
34+28+43+42
251*0.25
251*0.25
251*0.5
251*0.75
251*0.25
251*0.5
251*0.75
source('~/.active-rstudio-document')
251*0.25
ceil(251*0.25)
ceiling(251*0.25)
251*0.5
ceiling(251*0.5)
251*0.75
ceiling(251*0.75)
# b)
ceiling(251*0.25)
ceiling(251*0.5)
# b)
#25th quartile. Ceiling because it's a non-integer
ceiling(251*0.25)
34+28
ceiling(251*0.75)
34+28+43+42
34+28+43+42+39
#75th quartile. Ceiling because it's a non-integer
ceiling(251*0.75)
34+28+43+42+39
patient <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)
before <- c(9.1, 8.0, 7.7, 10.0, 9.6, 7.9, 9.0, 7.1, 8.3, 9.6, 8.2, 9.2, 7.3, 8.5, 9.5)
after <- c(8.2, 6.4, 6.6, 8.5, 8.0, 5.8, 7.8, 7.2, 6.7, 9.8, 7.1, 7.7, 6.0, 6.6, 8.4)
median(before)
# a)
median(before)
median(after)
# b)
sd(before)
sd(after)
# c)
cv(before)
cv(after)
library("smartstats")
# c)
cv(before)
cv(after)
??cv
# c)
cov(before)
# c)
covariance(before)
??covariance
# c)
var(before)
# c)
cov(before)
# c)
cov(before, after)
# d)
cor(before, after)
# e)
diff <- before - after
mean(diff)
var(diff)
sd(diff)
boxplot(diff)
# c)
cov(before, after)
# d)
cor(before, after)
after
mean(diff)
var(diff)
sd(diff)
boxplot(diff)
# a)
rawMeanInterval(180.05, 0.0959, 16)
library("smartstats")
# a)
rawMeanInterval(180.05, 0.0959, 16)
180.05 * c(-1, 1) * 1.753 * (0.0959 / sqrt(16))
180.05 + c(-1, 1) * 1.753 * (0.0959 / sqrt(16))
# a)
rawMeanInterval(180.05, 0.0959, 16)
# a)
rawMeanInterval(180.05, 0.0959, 16)
# b)
rawSdInterval(0.0959, 16, alpha=0.01)
# Q3)
dhyper(x=0, m=6, n=20-6, k=3)
# Q1)
1/(-2-2)
# Q1)
1/(2+2)
# Q2)
??puni
# Q2)
1 - punif(1, -2, 2)
# Q2)
1 - punif(1, -2, 2)
# Q1)
1/(2+2)A
# Q1)
1/(2+2)
# Q1)
1/(2+2)
# From Exercise 3.1
mu <- 3000
val <- c(3003, 3005, 2997, 3006, 2999, 2998, 3007, 3005, 3001)
# a)
t.test(val)
# a)
t.test(val, mu=mu)
# b)
criticalval(val, alpha = 0.01)
# c)
criticalval(val, alpha = 0.05)
# a)
t.test(x, mu=180)
# Exercise 3.4
x <- c(180.02, 180.00, 180.01, 179.97, 179.92, 180.05, 179.94, 180.10, 180.24, 180.12, 180.13, 180.22, 179.96, 180.10, 179.96, 180.06)
# a)
t.test(x, mu=180)
# Exercise 3.4
x <- c(180.02, 180.00, 180.01, 179.97, 179.92, 180.05, 179.94, 180.10, 180.24, 180.12, 180.13, 180.22, 179.96, 180.10, 179.96, 180.06)
# a)
t.test(x, mu=180)
# b)
t.test(x, mu=180, conf.level = 0.01)
library("smartstats")
# b)
criticalval(x, alpha = 0.01)
# c)
rawMeanInterval(180, sd = 0.0959, len = 16)
# c)
rawMeanInterval(180.05, sd = 0.0959, len = 16)
# c)
rawMeanInterval(mu = 180.05, sd = 0.0959, len = 16, alpha = 0.01)
t.test(x, conf.level = 0.01)
t.test(x, conf.level = 0.01)
# c)
rawMeanInterval(mu = 180.05, sd = 0.0959, len = 16, alpha = 0.01)
t.test(x, conf.level = 0.01)
# d)
t.test(x, mu = 180, conf.level = 0.05)
# Quiz 5
x <- c(44.9, 44.2, 44.6, 44.8, 44.0, 45.1)
y <- c(32.4, 32.5, 31.5, 32.2, 32.6, 31.7)
t.test(x, mu = 45, conf.level = 0.1)
# Q2)
??dhyper
# Q2)
??dhyper
# Q2)
dhyper(x = 1, m = 3, n = 1, k = 3)
# Q2)
# P(X = 0)
dhyper(x=0, m=20*0.25, n=20 - 20*0.25, k=20)
# Q2)
# P(X = 0)
dhyper(x=6, m=20*0.25, n=20 - 20*0.25, k=20)
# Q2)
# P(X = 6)
dhyper(x=6, m=6, n=20 - 6, k=20)
# Q2)
# P(X = 6)
dhyper(x=6, m=6, n=20 - 6, k=20, p = 0.25)
# Q2)
# P(X = 6)
qhyper(p = 0.25, m=6, n=20 - 6, k=20)
# Q2)
# P(X = 6)
??dbinom
# Q2)
# P(X = 6)
dbinom(6, 20, 0.25)
# Q2)
# P(X = 6)
dbinom(6, 20, 0.25)
var(c(10, 25, 30, 25, 10))
var(c(0.10, 0.25, 0.30, 0.25, 0.10))
# Q3)
var(c(2*0.1, 4*0.25, 7*0.3, 10*0.25, 12*0.1))
??obs
# Q4)
# tobs:
1.363 / (1.521 * sqrt(48))
# Q4)
# tobs:
1.363 / (1.521^2 * sqrt(48))
# Q4)
# tobs:
1.363^2 / (1.521^2 * sqrt(48))
# Q4)
# tobs:
1.363^2 / (1.521^2 * sqrt(47))
# Q4)
# tobs:
1.363 / (1.521^2 / sqrt(48))
# Q4)
# tobs:
1.363 / (1.521^2 / sqrt(48))
# Q4)
# tobs:
tobs <- 1.363 / (1.521^2 / sqrt(48))
1 - pnorm(tobs, mean = 1.363, sd = 1.521)
# Q5)
rawSdInterval(sd=1.521, len=48)
# Q5)
rawSdInterval(sd=1.521, len=48)
# Q3)
# Use variance of a discrete distribution
mu = mean(c(2, 4, 7, 10, 12))
(2 - mu)^2 * 0.10 + (4 - mu)^2 * 0.25 + (7 - mu)^2 * 0.30 + (10 - mu)^2 * 0.25 + (12 - mu) * 0.10
(2 - mu)^2 * 0.10 + (4 - mu)^2 * 0.25 + (7 - mu)^2 * 0.30 + (10 - mu)^2 * 0.25 + (12 - mu)^2 * 0.10
# Q3)
# Use variance of a discrete distribution
mu = mean(c(2, 4, 7, 10, 12))
(2 - mu)^2 * 0.10 + (4 - mu)^2 * 0.25 + (7 - mu)^2 * 0.30 + (10 - mu)^2 * 0.25 + (12 - mu)^2 * 0.10
# Q4)
# tobs:
tobs <- 1.363 / (1.521 / sqrt(48))
1 - pnorm(tobs, mean = 1.363, sd = 1.521)
tobs
# Q4)
# tobs:
tobs <- 1.363 / (1.521 / sqrt(48))
tobs
1 - pnorm(tobs, mean = 1.363, sd = 1.521)
qt(0.975, 47)
# Q2)
# P(X = 6)
dbinom(6, 20, 0.25)
# Q3)
# Use variance of a discrete distribution
mu = mean(c(2, 4, 7, 10, 12))
# Q2)
# P(X = 6)
dbinom(6, 20, 0.25)
# Q3)
# Use variance of a discrete distribution
mu = mean(c(2, 4, 7, 10, 12))
(2 - mu)^2 * 0.10 + (4 - mu)^2 * 0.25 + (7 - mu)^2 * 0.30 + (10 - mu)^2 * 0.25 + (12 - mu)^2 * 0.10
devtools::document()
setwd("D:/Daniel/smartstats")
devtools::document()
devtools::document()
devtools::install()
library("smartstats")
# Exercise 3.5
pval2Raw(1.93, 1.49, 0.45, 0.58, 9, 9)
# Exercise 3.5
pval2Raw(1.93, 1.49, 0.45, 0.58, 9, 9)
devtools::document()
devtools::install()
# Exercise 3.5
pval2Raw(1.93, 1.49, 0.45, 0.58, 9, 9)
library("smartstats")
# Exercise 3.5
pval2Raw(1.93, 1.49, 0.45, 0.58, 9, 9)
# Exercise 3.5
pval2Raw(1.93, 1.49, 0.45^2, 0.58^2, 9, 9)
# a)
pval2Raw(1.93, 1.49, 0.45^2, 0.58^2, 9, 9)
# b)
rawMeanInterval(1.93 - 1.49, sd = 0.58 - 0.45, n=9)
# b)
rawMeanInterval(1.93 - 1.49, sd = 0.58 - 0.45, 9)
devtools::document()
devtool::install()
devtools::install()
library("smartstats")
# a)
pval2Raw(c(1.93, 1.49), c(0.45^2, 0.58^2), c(9, 9))
devtools::document()
devtools::install()
library("smartstats")
# a)
pval2Raw(c(1.93, 1.49), c(0.45^2, 0.58^2), c(9, 9))
# b)
confInterval2Raw(c(1.93, 1.49), c(0.45^2, 0.58^2), c(9, 9))
devtools::install()
library("smartstats")
# a)
pval2Raw(c(1.93, 1.49), c(0.45^2, 0.58^2), c(9, 9))
# b)
confInterval2Raw(c(1.93, 1.49), c(0.45^2, 0.58^2), c(9, 9))
devtools::install()
devtools::document()
devtools::install()
# a)
pval2Raw(c(1.93, 1.49), c(0.45^2, 0.58^2), c(9, 9))
# b)
confInterval2Raw(c(1.93, 1.49), c(0.45^2, 0.58^2), c(9, 9))
)
# b)
confInterval2Raw(c(1.93, 1.49), c(0.45^2, 0.58^2), c(9, 9))
# b)
confInterval2Raw(c(1.93, 1.49), c(0.45^2, 0.58^2), c(9, 9))
# c)
power.t.test(n=9, delta=0.4, sd = 0.5)
# c)
power.t.test(n=9, delta=0.4, sd = 0.5)
# d)
power.t.test(n=9, power = 0.8, sd = 0.5)
# e)
power.t.test(n=9, delta=0.4, power=0.9, sd = 0.5)
# e)
power.t.test(delta=0.4, power=0.9, sd = 0.5)
Pulse_end <- c(173,175,174,183,181,180,170,182,188,178,181,183,185)
Pulse_1min <- c(120,115,122,123,125,140,108,133,134,121,130,126,128)
# a)
t.test(Pulse_end, Pulse_1min, paired=TRUE, conf.level=0.99)
# Exercise 3.7
Pulse_end <- c(173,175,174,183,181,180,170,182,188,178,181,183,185)
Pulse_1min <- c(120,115,122,123,125,140,108,133,134,121,130,126,128)
# a)
t.test(Pulse_end, Pulse_1min, paired=TRUE, conf.level=0.99)
# b)
sdInterval(Pulse_end)
library("smartstats")
library("smartstats")
confInterval2Raw(m = c(2.508, 2.103), v = c(0.3373^2, 0.2834^2), n=c(10, 10))
confInterval2Raw(c(2.508, 2.103), c(0.3373^2, 0.2834^2), c(10, 10))
(2.508 - 2.103) + c(-1, 1) * qt(0.975, df=9) * sqrt(0.3373^2/10 + 0.2834^2/10)
0.2834 + 0.09664
(2.508 - 2.103) + c(-1, 1) * qt(0.975, df=9) * 0.09664 / sqrt(10)
# a)
# Use one-sample confidence interval formula because it's paired (maybe ???)
(2.508 - 2.103) + c(-1, 1) * qt(0.975, df=9) * sqrt(0.3373^2/10 + 0.2834^2/10)
# b)
tobs2Raw(c(2.508, 2.103), c(0.3373, 0.2834), c(10, 10))
# b)
(2.508 - 2.103)
# b)
((2.508 - 2.103) - 0.35) / (0.09664 / sqrt(10))
# b)
tobs <- ((2.508 - 2.103) - 0.35) / (0.09664 / sqrt(10))
2 * (1 - pt(tobs, df = 10-1))
# b)
tobs <- ((2.508 - 2.103) - 0.35) / (0.09664 / sqrt(10))
2 * (1 - pt(tobs, df = 10-1))
# b)
tobs <- ((2.508 - 2.103) - 0.35) / (0.09664 / sqrt(10))
2 * (1 - pt(tobs, df = 10-1))
library("smartstats")
# Q2
qchisq(p=c(1-0.99/2, 0.99/2), df = 19)
sqrt(19*2.121^2/qchisq(p=1-0.99/2, df = 19))
sqrt(19*2.121^2/qchisq(p=0.99/2, df = 19))
# Q2
qchisq(p=c(1-0.01/2, 0.01/2), df = 19)
sqrt(19*2.121^2/qchisq(p=1-0.01/2, df = 19))
sqrt(19*2.121^2/qchisq(p=0.01/2, df = 19))
19*2.121^2
sqrt(19)*2.121^2  =  19*2.121^2
sqrt(19)*2.121^2
sqrt(19)*2.121
19*2.121^2
19*2.121^2
# Q3
sum(sample(1:6, size = 50, replace=TRUE))/50
# Q3
sum(sample(1:6, size = 50, replace=TRUE))/50
# Q3
sum(sample(1:6, size = 50, replace=TRUE))/50
# Q3
sum(sample(1:6, size = 50, replace=TRUE))/50
# Q3
sum(sample(1:6, size = 50, replace=TRUE))/50
# Q4
confInterval2Raw(c(39.0, 43.5), c(2.6458^2, 2.6726^2), c(7, 8))
4.5+c(-1, 1)*2.164*sqrt((1/15)*(2.6458^2+2.6726^2)/2)
4.5+c(-1, 1)*2.164*sqrt( (1/6 + 1/7)*(6*2.6458^2 + 7*2.6726^2) /13 )
4.5+c(-1, 1)*1.96*sqrt( (1/7 + 1/8)*(2.6458^2 + 2.6726^2) /2 )
4.5+c(-1, 1)*2.13*sqrt( (1/7 + 1/8)*(2.6458^2 + 2.6726^2) /2 )
4.5+c(-1, 1)*2.164*sqrt( (2.6458^2/7 + 2.6726^2 /8 )
4.5+c(-1, 1)*2.164*sqrt( 2.6458^2/7 + 2.6726^2 /8 )
4.5+c(-1, 1)*2.164*sqrt( 2.6458^2/7 + 2.6726^2 /8 )
# Q4
m <- c(38, 36, 37, 41, 37, 43, 41)
f <- c(45, 39, 41, 44, 47, 46, 44, 42)
confInterval2(m, f)
43.5-39
sqrt( (1/15)*(2.6458^2+2.6726^2)/2 )
sqrt( (1/6 + 1/7)*(6*2.6458^2 + 7*2.6726^2) /13 )
sqrt( (1/7 + 1/8)*(2.6458^2 + 2.6726^2) /2 )
sqrt( (1/7 + 1/8)*(2.6458^2 + 2.6726^2) /2 )
sqrt( 2.6458^2/7 + 2.6726^2 /8 )
(2.6726-2.6458)/sqrt(9)
(2.6726-2.6458)/sqrt(7)
(2.6726-2.6458)/sqrt(8)
2.6726/sqrt(8)
# Q6
x <- c(143, 134, 138, 135, 131, 135, 139, 141, 143, 142, 141, 149, 140)
confInterval(x)
14*3*61^2/26.12
13*3*61^2/22.36
14*3*61/26.12
13*3*61/24.74
13*3*61^2/24.74
